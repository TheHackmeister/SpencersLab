bitwardenIds:
  admin-account: OVERRIDE_VIA_CUSTOM_VALUES
  wekan-sso-secret: OVERRIDE_VIA_CUSTOM_VALUES
  paperless-sso-secret: OVERRIDE_VIA_CUSTOM_VALUES
  paperless-samba-secret: OVERRIDE_VIA_CUSTOM_VALUES

seaweedfs-csi-driver:
  seaweedfsFiler: OVERRIDE_VIA_CUSTOM_VALUES

domain: OVERRIDE_VIA_APPSET
clusterName: OVERRIDE_VIA_APPSET

ingress:
  subdomains:
    boards:
      service: home-boards
      port: 8080
    wekan:
      service: home-wekan
      port: 8080

    documents:
      serviceName: paperless
      service: home-paperless-main
      port: 8000

    pictures:
      serviceName: immich
      service: immich-server
      port: 2283

    zigbee:
      serviceName: zigbee2mqtt
      service: home-zigbee2mqtt
      port: 8080

    #mqtt:
    #  serviceName: mosquitto
    #  service: home-mosquitto
    #  port:

    audio-devices:
      serviceName: snapserver
      service: home-snapcast-snapcast-http
      port: 1780

    audio-lights:
      serviceName: ledfx
      service: home-ledfx
      port: 8888

    music-player:
      serviceName: lms
      service: home-logitech-media-server
      port: 9000

    #music-assistant:
    #  serviceName: lms
    #  service: home-music-assistant
    #  port: ????

    hyperion:
      #serviceName: hyperion
      service: home-hyperion
      port: 8090

    cluster:
      clusterBase: true
      service: base-argocd-server
      port: 80
    traefik:
      clusterBase: true
      namespace: kube-system
      service: traefik
      port: 80

# Have to split wekan into 2 pods to handle 2 urls. 
wekan:
  root_url: OVERRIDE_VIA_CUSTOM_VALUES
  env: {}
  secretEnv:
    - name: MONGO_URL
      value: "mongodb://wekan-mongodb:27017"
  extraEnvFrom: |
    - secretRef:
        name: "wekan-sso"
  autoscaling:
    enabled: false
  ingress:
    enabled: false
  mongodb:
    service:
      nameOverride: wekan-mongodb
boards:
  root_url: OVERRIDE_VIA_CUSTOM_VALUES
  env: {}
  secretEnv:
    - name: MONGO_URL
      value: "mongodb://wekan-mongodb:27017"
  extraEnvFrom: |
    - secretRef:
        name: "wekan-sso"
  mongodb:
    service:
      nameOverride: wekan-mongodb

  autoscaling:
    enabled: false
  ingress:
    enabled: false

generic-device-plugin:
  app-template:
    controllers:
      main:
        containers:
          main:
            image:
              repository:  ghcr.io/squat/generic-device-plugin
              tag: 36bfc606bba2064de6ede0ff2764cbb52edff70d
    configMaps:
      config:
        enabled: true
        data:
          devices.yaml: |-
            devices:
              - name: zigbee
                groups:
                  - paths:
                      - path: /dev/ttyUSB1
              - name: zwave
                groups:
                  - paths:
                      - path: /dev/ttyUSB0
              - name: snd
                groups:
                  - paths:
                      - path: /dev/snd

zigbee2mqtt:
  bitwardenIds:
    zigbee2mqtt: 0164cfbc-dd85-43af-a4cc-b13f00108bde
  app-template:
    controllers:
      zigbee2mqtt:
        containers:
          main:
            image: 
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 2.1.1
            env:
              TZ: America/Denver
              #DEBUG: zigbee-herdsman*
              #ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: debug
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: https://zigbee2mqtt.spencerslab.com
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtt://home.spencerslab.com
              ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 4
              ZIGBEE2MQTT_CONFIG_SERIAL_BAUDRATE: 57600
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: /dev/ttyUSB1
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: ezsp
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
        pod:
          securityContext:
            runAsNonRoot: false

snapcast:
  app-template:
    controllers:
      snapcast:
        containers:
          main:
            env:
              LOG_LEVEL: debug
              TZ: America/Denver
              HOME: /tmp/

    configMaps:
      snapserver-conf:
        data:
          snapserver.conf: |-
            [stream]
            source = process:///usr/bin/squeezelite?name=LMS&params=-n "LMS" -s home-logitech-media-server.default -o - -a 16 -r 48000 -m 11:22:33:44:55:66
            source = process:///usr/bin/roc-recv?name=SpencersStream&buffer=300&params=--target-latency 200ms --rate 48000 --output=file:- --output-format=s16 --source=rtp+rs8m://0.0.0.0:10001 --repair=rs8m://0.0.0.0:10002 --control=rtcp://0.0.0.0:10003
            stream = tcp://0.0.0.0?name=MusicAssistant&port=4953
            source = pipe:///tmp/snapfifo?name=default
            stream = meta:///SpencersStream/LMS/MusicAssistant/default?name=Spencer&mode=recent
            # Snapserver kinda just stops playing to a speaker if it can't keep up.
            # Have to extend this to 700ms to support BT speakers. 300 works if there are no BT considerations.
            buffer = 700
            #source = pipe:///tmp/rocsink?name=rocfile

            [http]
            doc_root = /usr/share/snapserver/snapweb

    persistence:
      snapserver:
        type: configMap
        name: "{{ .Release.Name }}-snapcast-snapserver-conf"
        globalMounts:
          - path: /etc/snapserver.conf
            subPath: snapserver.conf

music-assistant:
  app-template:
    controllers:
      music-assistant:
        containers:
          main:
            env:
              LOG_LEVEL: debug
              TZ: America/Denver

ledfx:
  app-template:
    defaultPodOptions:
      hostname: house-lights
    controllers:
      ledfx:
        containers:
          main:
            env:
              # Woulda used a different name, but looking through the entrypoint.sh HOST is clearly intended for a snapserver
              HOST: snapserver.spencerslab.com
              PLAYER_ID: house-lights
          #  resources:
          #    limits:
          #      squat.ai/snd: 1
    # TODO: Add this to the image.
    configMaps:
      entrypoint-override:
        data: 
          custom-entrypoint.sh: |-
            #!/bin/bash

            # Start avahi daemon for WLED auto discovery
            avahi-daemon --daemonize --no-drop-root

            # https://superuser.com/questions/1539634/pulseaudio-daemon-wont-start-inside-docker
            # Start the pulseaudio server
            rm -rf /var/run/pulse /var/lib/pulse /root/.config/pulse
            pulseaudio -D --verbose --exit-idle-time=-1 --system --disallow-exit

            if [[ -v FORMAT ]]; then
                ./pipe-audio.sh
            fi

            if [[ -v HOST ]]; then
                snapclient --host "$HOST" --hostID "${PLAYER_ID:-None}" --daemon 1
            fi

            if [[ -v SQUEEZE ]]; then
                ./squeeze.sh
            fi

            mkdir /app/ledfx-config

            mv -vn /app/config.yaml /app/ledfx-config/
            mkdir /root/.ledfx
            ledfx -c /app/ledfx-config

    persistence:
      config:
        existingClaim: ledfx
        advancedMounts:
          ledfx:
            main:
              - path: /app/ledfx-config/
      entrypoint-override:
        type: configMap
        name: '{{ .Release.Name }}-ledfx-entrypoint-override'
        defaultMode: 0777
        globalMounts:
          - path: /app/entrypoint.sh
            subPath: custom-entrypoint.sh


hyperion:
  app-template:
    controllers:
      hyperion:
        containers:
          main:
            env:
              TZ: America/Denver
              PUID: 911
              PGID: 1000
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: 
                  - ALL
        pod:
          securityContext:
            #runAsNonRoot: false
            #runAsUser: 911
            fsGroup: 911
            fsGroupChangePolicy: OnRootMismatch

logitech-media-server:
  app-template:
    controllers:
      logitech-media-server:
        containers:
          main:
            env:
              TZ: America/Denver
              EXTRA_ARGS: "--advertiseaddr=lms.spencerslab.com"

    configMaps:
      init:
        data: 
          custom-entrypoint.sh: |-
            #!/bin/sh
            : "${SQUEEZE_UID:=1000}"
            : "${SQUEEZE_GID:=1000}"

            groupadd -g "$SQUEEZE_GID" squeezeboxserver

            useradd -u "$SQUEEZE_UID" -g "$SQUEEZE_GID" \
                -d "$SQUEEZE_VOL" \
                -c 'Logitech Media Server' \
                squeezeboxserver

            if [ "$SQUEEZE_VOL" ] && [ -d "$SQUEEZE_VOL" ]; then
                for subdir in prefs logs cache; do
                    mkdir -p "$SQUEEZE_VOL/$subdir"
                done
            fi

            # This has to happen every time in case our new uid/gid is different
            # from what was previously used in the volume.
            chown -R squeezeboxserver:squeezeboxserver "$SQUEEZE_VOL"


            #apt update -qq
            #apt install -y ffmpeg pulseaudio alsa-utils cava vim
            #mkdir -p /var/run/dbus
            #dbus-uuidgen > /var/lib/dbus/machine-id
            #dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address
            #systemctl --global disable pulseaudio.service pulseaudio.socket
            #usermod -aG audio root
            #mkdir -p /var/run/pulse/.config/pulse/
            #touch /var/run/pulse/.config/pulse/cookie
            #exec runuser -u squeezeboxserver -- pulseaudio --verbose --exit-idle-time=-1 --disallow-exit --load="module-native-protocol-tcp auth-anonymous=true port=1337" &

            exec runuser -u squeezeboxserver -- /start-squeezebox.sh "$@"

    persistence:
      playlists:
        existingClaim: lms-playlists
        globalMounts:
          - path: /playlists
      config:
        existingClaim: lms-config
        globalMounts:
          - path: /squeezebox
      music:
        existingClaim: music-shared
        globalMounts:
          - path: /music
      init-config-map:
        type: configMap
        name: '{{ .Release.Name }}-logitech-media-server-init'
        defaultMode: 0777
        globalMounts:
          - path: /entrypoint.sh
            subPath: custom-entrypoint.sh

paperless:
  global:
    nameOverride: paperless
  controllers:
    main:
      containers:
        main:
          image:
            repository: ghcr.io/paperless-ngx/paperless-ngx
            tag: 2.14.7@sha256:2a6d9f6461ad7e8335f5b2123a173b9e6002fda209af8a66483b0c00629569ab
          env:
            PAPERLESS_TIME_ZONE: America/Denver
            PAPERLESS_URL: https://documents.spencerslab.com
            PAPERLESS_ALLOWED_HOSTS: '*'
            PAPERLESS_CSRF_TRUSTED_ORIGINS: https://documents.spencerslab.com,https://paperless.spencerslab.com
            PAPERLESS_TIKA_ENABLED: 1
            PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
            PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
            COMPOSE_PROJECT_NAME: paperless-ngx
            PAPERLESS_DBHOST: pg-paperless-rw
            PAPERLESS_DBNAME: paperless
            PAPERLESS_DBUSER:
              valueFrom:
                secretKeyRef:
                  name: pg-paperless-secret
                  key: username
            PAPERLESS_DBPASS:
              valueFrom:
                secretKeyRef:
                  name: pg-paperless-secret
                  key: password
            PAPERLESS_REDIS: redis://localhost:6379
            USERMAP_UID: 33
            USERMAP_GID: 33
            PAPERLESS_CONSUMPTION_DIR: /paperless/consume
            PAPERLESS_DATA_DIR: /paperless/data
            PAPERLESS_MEDIA_ROOT: /paperless/media
            PAPERLESS_FILENAME_FORMAT: '{{ `{{ created_year }}/{{ correspondent }}/{{ title }}` }}'
            PAPERLESS_FILENAME_FORMAT_REMOVE_NONE: true
            PAPERLESS_CONSUMER_POLLING: 60
            # Aiming for 30 minute timeout.
            PAPERLESS_CONSUMER_POLLING_RETRY_COUNT: 360 
            PAPERLESS_CONSUMER_POLLING_DELAY: 5
            PAPERLESS_CONSUMER_DELETE_DUPLICATES: true
            PAPERLESS_CONSUMER_RECURSIVE: true
            PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: true
            PAPERLESS_OCR_LANGUAGE: eng
            # TODO: Have to manually disable these to grant initial privs.
            PAPERLESS_DISABLE_REGULAR_LOGIN: true
            PAPERLESS_REDIRECT_LOGIN_TO_SSO: true
            PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
            PAPERLESS_SECRET_KEY:
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: PAPERLESS_SECRET_KEY
            PAPERLESS_SOCIALACCOUNT_PROVIDERS:
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: PAPERLESS_SOCIALACCOUNT_PROVIDERS
            PAPERLESS_ADMIN_USER:
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: PAPERLESS_ADMIN_USER
            PAPERLESS_ADMIN_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: paperless-secrets
                  key: PAPERLESS_ADMIN_PASSWORD
            PAPERLESS_ENABLE_HTTP_REMOTE_USER: 'true'
            PAPERLESS_OCR_PAGES: 2
            PAPERLESS_THREADS_PER_WORKER: 1
            PAPERLESS_WEBSERVER_WORKERS: 1
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5
              type: HTTP
          resources:
            limits:
              memory: 1.2Gi
            requests:
              cpu: 40m
              memory: 1.2Gi
        samba:
          image:
            repository: ghcr.io/crazy-max/samba
            tag: 4.19.9@sha256:270a8dcaeb7be73c3a63e2d7cc966cfdc6ca70b418c59e4af406bee6ea41ded7
          env:
            TZ: America/Denver
            SAMBA_HOSTS_ALLOW: "127.0.0.0/8 10.0.0.0/16 10.42.0.0/16"
            # TODO: Make the URL generic via a secret. 
            SAMBA_SERVER_STRING: "documents-samba.spencerslab.com"
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 40m
              memory: 100Mi
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - smbclient -L //localhost -U % -m SMB3 | grep "Disk"
            readiness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - smbclient -L //localhost -U % -m SMB3 | grep "Disk"
            startup:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - smbclient -L //localhost -U % -m SMB3 | grep "Disk"
        gotenburg:
          image:
            repository: gotenberg/gotenberg
            tag: 8.17.1@sha256:46e7b68adeadda1794a9ab194f1e2939f5b09ff21aadef6000e84102c9af6dd5
          env:
            DISABLE_GOOGLE_CHROME: '1'
          resources:
            limits:
              memory: 700Mi
            requests:
              cpu: 10m
              memory: 200Mi
        redis:
          image:
            repository: redis
            tag: 7.4.2@sha256:6aafb7f25fc93c4ff74e99cff8e85899f03901bc96e61ba12cd3c39e95503c73
          resources:
            limits:
              memory: 700Mi
            requests:
              cpu: 10m
              memory: 50Mi
        tika:
          image:
            repository: ghcr.io/paperless-ngx/tika
            tag: 2.9.1-minimal@sha256:20db3df89eaeb1b271dd840888fe909b88b12f4b86ef641ec07a1d45d4c5168f
          resources:
            limits:
              memory: 700Mi
            requests:
              cpu: 10m
              memory: 250Mi

  service:
    main:
      controller: main
      ports:
        http:
          port: 8000
          primary: true

    samba:
      controller: main
      type: LoadBalancer
      externalTrafficPolicy: Local
      ports:
        samba:
          enabled: true
          port: 445
          targetPort: 445
        samba-udp:
          enabled: true
          protocol: UDP
          port: 445
          targetPort: 445

  configMaps:
    samba-config:
      data: 
        samba.yaml: |-
          ---
          auth:
            - user: scanner
              group: scanner
              uid: 33
              gid: 33
              password_file: /run/secrets/samba_password
          #global:
          #  - "client min protocol = CORE"
          #  - "client max protocol = SMB3"
          share:
            - name: documents
              security: user
              path: /paperless
              browsable: yes
              readonly: no
              guestok: no
              validusers: scanner
              writelist: scanner
              veto: no
              hidefiles: /_*/
              recycle: yes
              force user: scanner

  persistence:
    documents:
      existingClaim: documents-shared
      globalMounts:
      - path: /paperless

    users:
      type: secret
      name: paperless-secrets
      advancedMounts:
        main:
          samba:
            - path: /run/secrets/samba_password
              subPath: samba-password
              readOnly: true

    config:
      name: "{{ .Release.Name }}-paperless-samba-config"
      type: configMap
      advancedMounts:
        main:
          samba:
            - path: /data/config.yml
              subPath: samba.yaml
              readOnly: true
